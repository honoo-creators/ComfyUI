import{d as H,h as r,c as g,i as W,K as Y,ai as G,z as J,o as f,j as y,b as Q,aj as X,e as h,m as ee,a as te,w as ae,B as ne,f as b,_ as le,n as oe}from"./DnIVQ8ma.js";const se=()=>({convertRegexToPattern:n,email:x,emailPattern:re,url:S,urlPattern:ue,postalCode:z,postalCodePattern:ie,bankAccountNumber:E,bankAccountNumberPattern:ce,bankAccount7Number:M,bankAccount7NumberPattern:de,noOnlySpace:U,noOnlySpacePattern:me,zenkakuKana:B,zenkakuKanaPattern:fe,upperCaseAlphanumeric:I,upperCaseAlphanumericPattern:pe,xProfileUrl:Z,xProfileUrlPattern:ve,youtubeChannelUrl:N,youtubeChannelUrlPattern:ge,threadsProfileUrl:C,threadsProfileUrlPattern:ye,instagramProfileUrl:T,instagramProfileUrlPattern:he,tiktokProfileUrl:V,tiktokProfileUrlPattern:be}),n=e=>e.toString().slice(1,-1),x=/^[a-zA-Z0-9.!#$&'+/=?^_{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/,re=n(x),S=/^[a-zA-Z][a-zA-Z0-9-_]{3,99}$/,ue=n(S),z=/^\d{3}-\d{4}$|^\d{7}$/,ie=n(z),E=/^\d+$/,ce=n(E),M=/^\d{7}$/,de=n(M),U=/^[\s　]*$/,me=n(U),B=/^[ァ-ヶー　（）]+$/,fe=n(B),I=/^[A-Z0-9]+$/,pe=n(I),Z=/^https:\/\/twitter\.com\/[a-zA-Z0-9_]{1,15}$/,ve=n(Z),N=/^https:\/\/(www\.)?youtube\.com\/(channel|c)\/[a-zA-Z0-9_-]+$/,ge=n(N),C=/^https:\/\/www\.threads\.net\/@[\w.]+$/,ye=n(C),T=/^https:\/\/www\.instagram\.com\/[a-zA-Z0-9._]+$/,he=n(T),V=/^https:\/\/www\.tiktok\.com\/@[\w.]+$/,be=n(V),we=["autocomplete","maxlength"],$e={class:"input-label-inner"},Pe={key:0,class:"input-label-required"},w="update:modelValue",Ae="enter-key-down",$="valid",P="invalid",A="focus",k="blur",xe=H({__name:"Input",props:{name:{type:String,default:"field",required:!0},type:{type:String,default:"text"},label:{type:String,default:""},placeholder:{type:String,default:""},modelValue:{type:String,default:"",required:!0},autocomplete:{type:Boolean,default:!1},pattern:{type:String},patternMismatchMessage:{type:String,default:"入力形式が正しくありません。"},maxlength:{type:[Number,String]},limitlength:{type:[Number,String]},required:{type:Boolean,default:!1},focus:{type:Boolean,default:!1},readonly:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},noSpin:{type:Boolean,default:!1},validation:{type:String,default:"blur",validator:e=>["always","blur"].includes(e)}},emits:{[w]:e=>!0,[Ae]:()=>!0,[$]:()=>!0,[P]:e=>!0,[A]:()=>!0,[k]:()=>!0},setup(e,{emit:q}){const{noOnlySpace:D}=se(),t=e,s=q,i=r("idle"),K=r(null),c=r(t.focus),p=r(!1),v=`input-${t.name}`,d=r(""),L=g(()=>({[`_${i.value}`]:!0,_focus:c.value,_input:l.value.length,_readonly:t.readonly,_noLabel:!t.label,_disabled:t.disabled,_noSpin:t.noSpin})),l=g({get:()=>t.modelValue,set:a=>{s(w,a)}});W(()=>t.modelValue,()=>{(t.validation==="always"||d.value)&&u()});const O=()=>{},_=()=>{},R=()=>{c.value=!0,s(A)},F=()=>{t.validation==="blur"&&u(),c.value=!1,s(k)},u=()=>{let a="";l.value===""&&t.required&&(a=`${t.label?`${t.label}を`:`${t.placeholder}を`}入力してください。`),!a&&t.maxlength&&l.value.length>Number.parseInt(String(t.maxlength))&&(a=`${t.maxlength}文字以内で入力してください。現在${l.value.length}文字です。`),!a&&l.value!==""&&l.value.match(D)&&(a="空白のみの入力はできません。"),!a&&t.pattern&&!new RegExp(t.pattern).test(l.value)&&(a=t.patternMismatchMessage),l.value===""&&!t.required&&(a=""),a?(i.value="invalid",s(P,a),d.value=a):(i.value="valid",s($),d.value="")};return Y(async()=>{await G(),l.value&&u()}),(a,o)=>{const j=J("focus");return f(),y("div",{class:oe(["input",L.value])},[Q(h("input",ee({id:v,ref_key:"fieldEl",ref:K,"onUpdate:modelValue":o[0]||(o[0]=m=>l.value=m),class:"input-field"},{type:e.type,name:e.name,placeholder:e.placeholder,required:e.required,readonly:e.readonly,disabled:e.disabled,autocomplete:e.autocomplete,pattern:e.pattern,maxlength:e.maxlength},{autocomplete:e.autocomplete?"on":"off",maxlength:e.limitlength,onInput:O,onKeydown:_,onFocus:R,onBlur:F,onMouseover:o[1]||(o[1]=m=>p.value=!0),onMouseleave:o[2]||(o[2]=m=>p.value=!1)}),null,16,we),[[X,l.value],[j,e.focus]]),e.label?(f(),te(le,{key:0,tag:"label",for:v,class:"input-label"},{default:ae(()=>[h("span",$e,ne(e.label),1),e.required?(f(),y("span",Pe,"*")):b("",!0)]),_:1})):b("",!0)],2)}}});export{xe as _};
