import{d as N,x as s,h as p,P as L,o as C,aq as U,y as A,f,g,j as F,aI as O,k as y,m as R,i as K,w as P,B as j,l as h,_ as z,p as H}from"./CcndUWmQ.js";import{u as W}from"./DPbgO4ha.js";const Y=["autocomplete","maxlength"],_={class:"input-label-inner"},G={key:0,class:"input-label-required"},b="update:modelValue",J="enter-key-down",x="valid",S="invalid",E="focus",M="blur",Z=N({__name:"Input",props:{name:{type:String,default:"field",required:!0},type:{type:String,default:"text"},label:{type:String,default:""},placeholder:{type:String,default:""},modelValue:{type:String,default:"",required:!0},autocomplete:{type:Boolean,default:!1},pattern:{type:String},patternMismatchMessage:{type:String,default:"入力形式が正しくありません。"},maxlength:{type:[Number,String]},limitlength:{type:[Number,String]},required:{type:Boolean,default:!1},focus:{type:Boolean,default:!1},readonly:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},noSpin:{type:Boolean,default:!1},validation:{type:String,default:"blur",validator:t=>["always","blur"].includes(t)}},emits:{[b]:t=>!0,[J]:()=>!0,[x]:()=>!0,[S]:t=>!0,[E]:()=>!0,[M]:()=>!0},setup(t,{emit:I}){const{noOnlySpace:B}=W(),e=t,o=I,i=s("idle"),w=s(null),r=s(e.focus),m=s(!1),v=`input-${e.name}`,d=s(""),q=p(()=>({[`_${i.value}`]:!0,_focus:r.value,_input:l.value.length,_readonly:e.readonly,_noLabel:!e.label,_disabled:e.disabled,_noSpin:e.noSpin})),l=p({get:()=>e.modelValue,set:a=>{o(b,a)}});L(()=>e.modelValue,()=>{(e.validation==="always"||d.value)&&u()});const V=()=>{},$=()=>{},k=()=>{r.value=!0,o(E)},D=()=>{e.validation==="blur"&&u(),r.value=!1,o(M)},u=()=>{let a="";l.value===""&&e.required&&(a=`${e.label?`${e.label}を`:`${e.placeholder}を`}入力してください。`),!a&&e.maxlength&&l.value.length>Number.parseInt(String(e.maxlength))&&(a=`${e.maxlength}文字以内で入力してください。現在${l.value.length}文字です。`),!a&&l.value!==""&&l.value.match(B)&&(a="空白のみの入力はできません。"),!a&&e.pattern&&!new RegExp(e.pattern).test(l.value)&&(a=e.patternMismatchMessage),l.value===""&&!e.required&&(a=""),a?(i.value="invalid",o(S,a),d.value=a):(i.value="valid",o(x),d.value="")};return C(async()=>{await U(),l.value&&u()}),(a,n)=>{const T=A("focus");return f(),g("div",{class:H(["input",q.value])},[F(y("input",R({id:v,ref_key:"fieldEl",ref:w,"onUpdate:modelValue":n[0]||(n[0]=c=>l.value=c),class:"input-field"},{type:t.type,name:t.name,placeholder:t.placeholder,required:t.required,readonly:t.readonly,disabled:t.disabled,autocomplete:t.autocomplete,pattern:t.pattern,maxlength:t.maxlength},{autocomplete:t.autocomplete?"on":"off",maxlength:t.limitlength,onInput:V,onKeydown:$,onFocus:k,onBlur:D,onMouseover:n[1]||(n[1]=c=>m.value=!0),onMouseleave:n[2]||(n[2]=c=>m.value=!1)}),null,16,Y),[[O,l.value],[T,t.focus]]),t.label?(f(),K(z,{key:0,tag:"label",for:v,class:"input-label"},{default:P(()=>[y("span",_,j(t.label),1),t.required?(f(),g("span",G,"*")):h("",!0)]),_:1})):h("",!0)],2)}}});export{Z as _};
