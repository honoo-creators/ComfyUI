import{x as g,d as p,f as _,g as m,z as d,w as u,Y as k,A as v,a2 as y,U as b,V as x}from"./CUawh0lQ.js";const t=g(null),n=g(null),h=new Set,$=()=>({init:I}),I=async()=>{w(!1)},w=c=>{if(console.log("createSocket",c),t.value)return;let a=window.name;a&&(a="?clientId="+a);const l=window.location.protocol==="https:"?"wss":"ws";console.log("createSocket",`${l}://${window.location.host}/ws${a}`),t.value=new WebSocket(`${l}://${window.location.host}/ws${a}`),console.log("createSocket",t.value),t.value.binaryType="arraybuffer",t.value.addEventListener("open",()=>{c&&console.log("reconnected")}),t.value.addEventListener("error",()=>{console.log("error"),t.value&&t.value.close()}),t.value.addEventListener("close",()=>{console.log("close"),setTimeout(()=>{t.value=null,w(!0)},300)}),t.value.addEventListener("message",o=>{try{if(o.data instanceof ArrayBuffer){const s=new DataView(o.data).getUint32(0),r=o.data.slice(4);switch(s){case 1:const f=new DataView(o.data).getUint32(0);let i;switch(f){case 1:default:i="image/jpeg";break;case 2:i="image/png"}const E=new Blob([r.slice(4)],{type:i});break;default:throw new Error(`Unknown binary websocket message of type ${s}`)}}else{const e=JSON.parse(o.data);switch(e.type){case"status":e.data.sid&&(n.value=e.data.sid,window.name=n.value,sessionStorage.setItem("clientId",n.value),console.log("clientId",n.value)),console.log("status",e.data.status);break;case"progress":console.log("progress",e.data);break;case"executing":console.log("executing",e.data.display_node);break;case"executed":console.log("executed",e.data);break;case"execution_start":console.log("execution_start",e.data);break;case"execution_success":console.log("execution_success",e.data);break;case"execution_error":console.log("execution_error",e.data);break;case"execution_cached":console.log("execution_cached",e.data);break;default:if(h.has(e.type))console.log("default",e.type,e.data);else throw new Error(`Unknown message type ${e.type}`)}}}catch(e){console.warn("Unhandled message:",o.data,e)}})},S={class:"pageDevComfyuiInternalApi"},B=p({__name:"internal-api",setup(c){const{init:a}=$();return(l,o)=>{const e=y,s=b,r=x;return _(),m("div",S,[d(r,null,{default:u(()=>[d(s,{justify:"stretch"},{default:u(()=>[d(e,{onClick:k(a)},{default:u(()=>o[0]||(o[0]=[v(" init ")])),_:1},8,["onClick"])]),_:1})]),_:1})])}}});export{B as default};
