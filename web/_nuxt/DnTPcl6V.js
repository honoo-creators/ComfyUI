import{d as T,x as s,h as i,P as H,o as N,aq as D,y as q,f as m,g as x,k as p,j as C,aH as L,m as R,af as F,i as U,w as A,B as O,l as b,_ as P,p as z}from"./BkO2rJNP.js";import{u as K}from"./C_lxWIKq.js";const j=["data-value"],G=["placeholder"],J={class:"textarea-label-inner"},Q={key:0,class:"textarea-label-required"},W="update:modelValue",X="valid",Y="invalid",Z="focus",ee="blur",le=T({__name:"Textarea",props:{name:{type:String,default:"textarea",required:!0},type:{type:String,default:"text"},label:{type:String,default:""},placeholder:{type:String,default:""},description:{type:String,default:""},modelValue:{type:String,default:"",required:!0},autocomplete:{type:Boolean,default:!1},autoheight:{type:Boolean,default:!0},pattern:{type:String},maxlength:{type:[Number,String]},rows:{type:[Number,String],default:1},maxRows:{type:[Number,String],default:null},required:{type:Boolean,default:!1},readonly:{type:Boolean,default:!1},focus:{type:Boolean,default:!1},nowrap:{type:Boolean,default:!1},noBorder:{type:Boolean,default:!1},validation:{type:String,default:"blur",validator:t=>["always","blur"].includes(t)}},emits:["update:modelValue","enter-key-down","valid","invalid","focus","blur"],setup(t,{emit:w}){const{noOnlySpace:S}=K(),e=t,u=w,d=s("idle"),r=s(!1),g=s(!1),h=`textarea-${e.name}`,y=s(""),l=s(null),c=s(null),B=i(()=>({[`_${d.value}`]:!0,_focus:r.value,_input:n.value.length,_noLabel:!e.label,_readonly:e.readonly,_maxHeight:!!e.maxRows})),n=i({get:()=>e.modelValue,set:a=>{u(W,a)}}),I=i(()=>r.value||!e.label?e.placeholder:""),_=i(()=>e.maxRows&&c.value!==null?`${c.value*Number.parseInt(String(e.maxRows))}px`:"none");H(()=>e.modelValue,()=>{e.validation==="always"&&f()});const E=()=>{l.value&&e.autoheight&&(l.value.style.height="auto",l.value.style.height=`${l.value.scrollHeight}px`)},$=a=>{a.key==="Enter"&&e.nowrap&&a.preventDefault()},M=()=>{r.value=!0,u(Z)},V=()=>{e.validation==="blur"&&f(),r.value=!1,u(ee)},f=()=>{let a="";n.value===""&&e.required&&(a=`${e.placeholder?`${e.placeholder}を`:""}入力してください。`),!a&&e.maxlength&&n.value.length>Number.parseInt(String(e.maxlength))&&(a=`${e.maxlength}文字以内で入力してください。現在${n.value.length}文字です。`),!a&&n.value!==""&&n.value.match(S)&&(a="空白のみの入力はできません。"),a?(d.value="invalid",u(Y,a),y.value=a):(d.value="valid",u(X),y.value="")};return N(async()=>{if(await D(),n.value&&f(),l.value){const a=window.getComputedStyle(l.value);c.value=Number.parseFloat(a.lineHeight),e.autoheight&&(l.value.style.height="auto",l.value.style.height=`${l.value.scrollHeight}px`)}}),(a,o)=>{const k=q("focus");return m(),x("div",{class:z(["textarea",B.value])},[p("div",{class:"textarea-inner","data-value":t.autoheight?n.value:"",style:F({maxHeight:_.value})},[C(p("textarea",R({id:h,ref_key:"fieldEl",ref:l,"onUpdate:modelValue":o[0]||(o[0]=v=>n.value=v),class:"textarea-inner-field",placeholder:I.value},{name:t.name,readonly:t.readonly,rows:t.rows},{onInput:E,onKeydown:$,onFocus:M,onBlur:V,onMouseover:o[1]||(o[1]=v=>g.value=!0),onMouseleave:o[2]||(o[2]=v=>g.value=!1)}),null,16,G),[[L,n.value],[k,t.focus]])],12,j),t.label?(m(),U(P,{key:0,tag:"label",for:h,class:"textarea-label"},{default:A(()=>[p("span",J,O(t.label),1),t.required?(m(),x("span",Q,"*")):b("",!0)]),_:1})):b("",!0)],2)}}});export{le as _};
